"""
Django settings for zim project.

Generated by 'django-admin startproject' using Django 1.11.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
with open('etc/chave.txt') as f:
    SECRET_KEY = f.read().strip()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Original ALLOWED_HOSTS - commented out and replaced by new command on the bottom of the page
ALLOWED_HOSTS = []


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'valdata',
    'schedule',
    'portname',
    'inventory',
    'agteam'

]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'zim.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'zim.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Media Files
# https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-MEDIA_ROOT

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'


# https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-DATETIME_INPUT_FORMATS
DATETIME_INPUT_FORMATS = [
    '%d-%m-%Y %H:%M:%S',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_URL = '/static/'

# Extra lookup directories for collectstatic to find static files
# when configured, COLLECTSTATIC complains of duplicate files
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'valdata', 'static'),
)


# https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Authentication
# https://wsvincent.com/django-user-authentication-tutorial-login-and-logout/
# Redirect to home URL after login (Default redirects to /accounts/profile/)
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# ==================================================================================================
# this sends the emails to the CONSOLE
# https://docs.djangoproject.com/en/3.0/topics/email/
# ==================================================================================================
if (DEBUG == True):
    # this will send the email to the console
    # EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    # this will SAVE the emails to a FILE/FOLDER in the backend of the DJANGO project
    EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend"
    EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails")


# https://wsvincent.com/django-referencing-the-user-model/
# AUTH_USER_MODEL = 'users.CustomUser'

# ==================================================================================================
# HEROKU DEPLOY CONFIGURATION
# ==================================================================================================
# instructions for the deploy
# https://www.codementor.io/@jamesezechukwu/how-to-deploy-django-app-on-heroku-dtsee04d4
# https://simpleisbetterthancomplex.com/tutorial/2016/08/09/how-to-deploy-django-applications-on-heroku.html


# Static files (CSS, JavaScript, Images)
# If you have files currently in your STATIC_ROOT that you wish to serve then you need 
# to move these to a different directory and put that other directory in STATICFILES_DIRS. 
# Your STATIC_ROOT directory should be empty and all static files should be collected 
# into that directory (i.e., it should not already contain static files)

# STATIC_ROOT is the path of the folder where the compiled files will be served from after collectstatic
# command = python manage.py collectstatic # this command will compile all the STATIC files into this folder.
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')